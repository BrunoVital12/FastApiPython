name: Build and Analyze

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  trivy-scan:
    runs-on: ubuntu-latest
    steps:
    - name: Check out the repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image
      run: docker build -t my-fastapi-app .

    - name: Run Trivy vulnerability scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: my-fastapi-app
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true

    - name: Save Docker image as artifact
      run: |
        docker save my-fastapi-app:latest | gzip > my-fastapi-app.tar.gz
        mkdir -p /tmp/artifacts
        mv my-fastapi-app.tar.gz /tmp/artifacts/

    - name: Upload Docker image artifact
      uses: actions/upload-artifact@v3
      with:
        name: docker-image
        path: /tmp/artifacts/my-fastapi-app.tar.gz

  build-and-push:
    runs-on: ubuntu-latest
    needs: trivy-scan
    if: success()
    steps:
    - name: Check out the repository
      uses: actions/checkout@v3

    - name: Download Docker image artifact
      uses: actions/download-artifact@v3
      with:
        name: docker-image

    - name: Load Docker image
      run: gunzip -c my-fastapi-app.tar.gz | docker load

    - name: List Docker images after load
      run: docker images

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Tag Docker image
      run: |
        docker tag my-fastapi-app:latest ${{ secrets.DOCKER_USERNAME }}/my-fastapi-app:latest

    - name: Push Docker image to Docker Hub
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/my-fastapi-app:latest

  sonarcloud:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: success()
    steps:
    - name: Check out the repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

    - name: Set up SonarCloud
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    - name: SonarCloud Analysis
      run: |
        sonar-scanner \
            -Dsonar.projectKey=BrunoVital12_FastApiPython \
            -Dsonar.organization=brunovital12 \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
